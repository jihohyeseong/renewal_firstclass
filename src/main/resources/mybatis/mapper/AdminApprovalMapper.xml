<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.renewal_firstclass.dao.AdminApprovalDAO">

	<select id="selectByConfirmNumber"
        parameterType="long"
        resultType="com.example.renewal_firstclass.domain.ConfirmApplyDTO">
	  SELECT
	    confirm_number,
	    apply_dt,
	    start_date,
	    end_date,
	    weekly_hours,
	    regular_wage,
	    child_name,
	    child_resi_regi_number,
	    child_birth_date,
	    registration_number,
	    name,
	    response_name,
	    response_phone_number,
	    status_code,
	    processor_id,
	    center_id,
	    user_id
	  FROM TB_CONFIRM_APPLICATION
	  WHERE confirm_number = #{confirmNumber}
	    AND NVL(delt_at,'N') = 'N'
	</select>
	
	<!-- 관리자 접수/반려 섹션 -->
	<update id="updateAdminJudge" parameterType="com.example.renewal_firstclass.domain.ConfirmApplyDTO">
		UPDATE TB_CONFIRM_APPLICATION
		SET
			processor_id = #{processorId},
			rejection_reason_code = #{rejectionReasonCode},
			reject_comment = #{rejectComment},
			status_code = #{statusCode}
		WHERE confirm_number = #{confirmNumber}
			AND status_code NOT IN ('ST_10', 'ST_50', 'ST_60', 'ST_70')
			AND NVL(delt_at,'N') = 'N'
	</update>
	
	<!-- 처리 완료 여부 확인 (상태 코드가 최종 처리 완료(ST_50, ST_60)인지 확인) -->
	<select id="isProcessed" parameterType="long" resultType="int">
		SELECT COUNT(*)
		FROM TB_CONFIRM_APPLICATION
		WHERE confirm_number = #{confirmNumber}
			AND status_code IN ('ST_50', 'ST_60')
			AND NVL(delt_at,'N') = 'N'
	</select>
	
	<!-- 상태 코드 업데이트 -->
	<update id="updateStatusCode" parameterType="long">
		UPDATE TB_CONFIRM_APPLICATION
		SET status_code = 'ST_30'
		WHERE confirm_number = #{confirmNumber}
	</update>
	
	<!-- 확인서 수정사항 업데이트 -->
	<update id="updateConfirmEdit">
	    UPDATE TB_CONFIRM_APPLICATION
	    <set>
	        <if test="updStartDate != null">upd_start_date = #{updStartDate},</if>
	        <if test="updEndDate != null">upd_end_date = #{updEndDate},</if>
	        <if test="updWeeklyHours != 0">upd_weekly_hours = #{updWeeklyHours},</if>
	        <if test="updRegularWage != 0">upd_regular_wage = #{updRegularWage},</if>
	        <if test="updChildName != null and updChildName != ''">upd_child_name = #{updChildName},</if>
	        <if test="updChildResiRegiNumber != null and updChildResiRegiNumber != ''">upd_child_resi_regi_number = #{updChildResiRegiNumber},</if>
	        <if test="updChildBirthDate != null">upd_child_birth_date = #{updChildBirthDate},</if>
	        processor_id = #{processorId}
	    </set>
	    WHERE confirm_number = #{confirmNumber}
	          AND NVL(delt_at, 'N') = 'N'
	</update>
	
	<!-- 관리자 수정 기능 섹션 -->
	<select id="selectByConfirmNumberWithUpdates" parameterType="long" resultType="com.example.renewal_firstclass.domain.ConfirmApplyDTO">
		SELECT
			confirm_number,
		    apply_dt,
		    upd_start_date,
	    	upd_end_date,
	    	upd_weekly_hours,
	    	upd_regular_wage,
	    	upd_child_name,
	    	upd_child_resi_regi_number,
	    	upd_child_birth_date,
		    registration_number,
		    name,
		    response_name,
		    response_phone_number,
		    status_code,
		    processor_id,
		    center_id,
		    user_id
		FROM TB_CONFIRM_APPLICATION
		WHERE confirm_number = #{confirmNumber}
		    AND NVL(delt_at,'N') = 'N'
	</select>
	
	<select id="selectOriginalTermAmounts" 
        parameterType="long" 
        resultType="com.example.renewal_firstclass.domain.TermAmountDTO">
	    SELECT
	        *
	    FROM TB_TERM_AMOUNT
	    WHERE confirm_number = #{confirmNumber}
	    AND update_at = 'N'
	</select>
	
	<select id="selectUpdatedTermAmounts" 
	        parameterType="long" 
	        resultType="com.example.renewal_firstclass.domain.TermAmountDTO">
	    SELECT
	        *
	    FROM TB_TERM_AMOUNT
	    WHERE confirm_number = #{confirmNumber}
	    AND update_at = 'Y'
	</select>
	
	<!-- upd 컬럼 존재 여부 확인 -->
	<select id="checkUpdColumnsExist" parameterType="long" resultType="int">
		SELECT COUNT(*)
		FROM TB_CONFIRM_APPLICATION
		WHERE confirm_number = #{confirmNumber}
			AND (upd_start_date IS NOT NULL 
				OR upd_end_date IS NOT NULL 
				OR upd_weekly_hours IS NOT NULL 
				OR upd_regular_wage IS NOT NULL
				OR upd_child_name IS NOT NULL
				OR upd_child_resi_regi_number IS NOT NULL
				OR upd_child_birth_date IS NOT NULL)
			AND NVL(delt_at, 'N') = 'N'
	</select>
	
	<!-- 수정된 단위기간 삽입 (update_at='Y') -->
	<insert id="insertUpdatedTermAmounts" parameterType="java.util.List">
		BEGIN
		  <foreach collection="terms" item="t">
		    INSERT INTO TB_TERM_AMOUNT (
		      payment_date, company_payment, gov_payment,
		      start_month_date, end_month_date, confirm_number, update_at
		    ) VALUES (
		      #{t.paymentDate, jdbcType=DATE},
		      #{t.companyPayment},
		      #{t.govPayment},
		      #{t.startMonthDate, jdbcType=DATE},
		      #{t.endMonthDate, jdbcType=DATE},
		      #{t.confirmNumber},
		      'Y'
		    );
		  </foreach>
		END;
	</insert>
	
	<!-- delt_at 'Y'로 변경 -->
	<update id="markOriginalTermsAsDeleted" parameterType="long">
    UPDATE TB_TERM_AMOUNT
    SET delt_at = 'Y'
    WHERE confirm_number = #{confirmNumber}
      AND update_at = 'N'
      AND NVL(delt_at, 'N') = 'N'
	</update>
	
	<!-- update_at 'Y'인 데이터 확인 -->
	<select id="countUpdatedTerms" parameterType="long" resultType="int">
	    SELECT COUNT(*)
	    FROM TB_TERM_AMOUNT
	    WHERE confirm_number = #{confirmNumber}
	      AND update_at = 'Y'
	</select>
	
	<!-- update_at='Y'인 단위기간만 삭제 -->
	<delete id="deleteUpdatedTerms" parameterType="long">
		DELETE FROM TB_TERM_AMOUNT
		WHERE confirm_number = #{confirmNumber}
		  AND update_at = 'Y'
	</delete>
	
</mapper>