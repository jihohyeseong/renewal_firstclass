<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.renewal_firstclass.dao.ConfirmApplyDAO">

<insert id="insertConfirmApplication"
        parameterType="com.example.renewal_firstclass.domain.ConfirmApplyDTO"
        useGeneratedKeys="true"
        keyProperty="confirmNumber" 
        keyColumn="confirm_number">
  INSERT INTO TB_CONFIRM_APPLICATION (
    start_date, end_date,
    weekly_hours, regular_wage,
    child_name, child_resi_regi_number, child_birth_date,
    registration_number, name,
    response_name, response_phone_number,
    status_code, center_id, user_id
  ) VALUES (
    #{startDate}, #{endDate},
    #{weeklyHours}, #{regularWage},
    #{childName}, #{childResiRegiNumber}, #{childBirthDate},
    #{registrationNumber}, #{name},
    #{responseName}, #{responsePhoneNumber},
    'ST_10', #{centerId}, #{userId}
  )
</insert>

 <update id="updateConfirm"
          parameterType="com.example.renewal_firstclass.domain.ConfirmApplyDTO">
    UPDATE TB_CONFIRM_APPLICATION
       SET start_date             = #{startDate},
           end_date               = #{endDate},
           weekly_hours           = #{weeklyHours},
           regular_wage           = #{regularWage},
           child_name             = #{childName},
           child_resi_regi_number = #{childResiRegiNumber},
           child_birth_date       = #{childBirthDate},
           registration_number    = #{registrationNumber},
           name                   = #{name},
           response_name          = #{responseName},
           response_phone_number  = #{responsePhoneNumber}
     WHERE confirm_number             = #{confirmNumber}
       AND user_id                = #{userId}
       AND status_code            = 'ST_10'
       AND NVL(delt_at, 'N')      = 'N'
  </update>

  <update id="submitConfirm"
          parameterType="map">
    UPDATE TB_CONFIRM_APPLICATION
       SET status_code = 'ST_20',
           apply_dt    = NVL(apply_dt, SYSDATE)
     WHERE confirm_number  = #{confirmNumber}
       AND user_id     = #{userId}
       AND status_code = 'ST_10'
       AND NVL(delt_at, 'N') = 'N'
  </update>

<select id="selectByConfirmNumber"
        parameterType="long"
        resultType="com.example.renewal_firstclass.domain.ConfirmApplyDTO">
  SELECT
    -- 본문
    ca.confirm_number,
    ca.apply_dt,
    ca.start_date,
    ca.end_date,
    ca.weekly_hours,
    ca.regular_wage,
    ca.child_name,
    ca.child_resi_regi_number,
    ca.child_birth_date,
    ca.registration_number,
    ca.name,
    ca.response_name,
    ca.response_phone_number,
    ca.status_code,
    ca.processor_id,
    ca.center_id,
    ca.user_id,
    ca.reject_comment,

    -- 상태 코드 이름
    sc.name  AS statusName,

    -- 센터 정보
    ctr.center_name        	 	AS centerName,
    ctr.center_phone_number	 	AS centerPhoneNumber,
    ctr.center_URL				AS centerURL,
    ctr.center_zip_code			AS centerZipCode,
    ctr.center_address_base		AS centerAddressBase,
    ctr.center_address_detail	AS centerAddressDetail,

    -- 반려 코드/사유 
    ca.rejection_reason_code,
    rc.name                   AS rejectReasonName

  FROM TB_CONFIRM_APPLICATION ca
  LEFT JOIN TB_CODE   sc  ON sc.code  = ca.status_code
  LEFT JOIN TB_CENTER ctr ON ctr.center_id = ca.center_id
  LEFT JOIN TB_CODE   rc  ON rc.code  = ca.rejection_reason_code

  WHERE ca.confirm_number = #{confirmNumber}
    AND NVL(ca.delt_at, 'N') = 'N'
</select>

  <update id="recallConfirm">
    UPDATE TB_CONFIRM_APPLICATION
       SET status_code = 'ST_10',
           apply_dt    = NULL
     WHERE confirm_number  = #{confirmNumber}
       AND user_id     = #{userId}
       AND (status_code='ST_20' OR status_code='ST_30')
       AND NVL(delt_at, 'N') = 'N'
  </update>
  
<select id="selectConfirmListSearch"
        parameterType="map"
        resultType="com.example.renewal_firstclass.domain.ConfirmListDTO">
  SELECT
    ca.confirm_number,
    ca.apply_dt,
    ca.status_code,
    ca.name,
    c.name AS statusName
  FROM TB_CONFIRM_APPLICATION ca
  LEFT JOIN TB_CODE c
    ON ca.status_code = c.code
  WHERE ca.user_id = #{userId}
  
  <if test="statusCode != null and statusCode != '' and statusCode != 'ALL'">
    AND ca.status_code = #{statusCode}
  </if>

  <!-- 근로자 이름 검색 -->
  <if test="nameKeyword != null and nameKeyword != ''">
    AND UPPER(ca.name) LIKE '%' || UPPER(#{nameKeyword}) || '%'
  </if>

  <!-- 근로자 주민등록번호 검색 -->
  <if test="regNoKeyword != null and regNoKeyword != ''">
    AND ca.registration_number = #{regNoKeyword}
  </if>

  AND NVL(ca.delt_at, 'N') = 'N'
  ORDER BY
    CASE ca.status_code
      WHEN 'ST_10' THEN 1
      WHEN 'ST_20' THEN 2
      WHEN 'ST_30' THEN 3
      WHEN 'ST_50' THEN 4
      WHEN 'ST_60' THEN 5
      ELSE 6
    END,
    ca.confirm_number DESC
  OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
</select>

<select id="countConfirmListSearch"
        parameterType="map"
        resultType="int">
  SELECT COUNT(*)
  FROM TB_CONFIRM_APPLICATION ca
  WHERE ca.user_id = #{userId}
  
  <if test="statusCode != null and statusCode != '' and statusCode != 'ALL'">
    AND ca.status_code = #{statusCode}
  </if>

  <if test="nameKeyword != null and nameKeyword != ''">
    AND UPPER(ca.name) LIKE '%' || UPPER(#{nameKeyword}) || '%'
  </if>

  <if test="regNoKeyword != null and regNoKeyword != ''">
    AND ca.registration_number = #{regNoKeyword}
  </if>

  AND ca.delt_at = 'N'
</select>

<!-- 기본 목록-->
<select id="selectConfirmList"
        parameterType="map"
        resultType="com.example.renewal_firstclass.domain.ConfirmListDTO">
  SELECT
    ca.confirm_number,
    ca.apply_dt,
    ca.status_code,
    ca.name,
    c.name            AS statusName
  FROM TB_CONFIRM_APPLICATION ca
  LEFT JOIN TB_CODE c
    ON ca.status_code = c.code
  WHERE ca.user_id = #{userId}
    AND ca.delt_at = 'N'
  ORDER BY
    CASE ca.status_code
      WHEN 'ST_10' THEN 1
      WHEN 'ST_20' THEN 2
      WHEN 'ST_30' THEN 3
      WHEN 'ST_50' THEN 4
      WHEN 'ST_60' THEN 5
      ELSE 6
    END,
    ca.confirm_number DESC
  OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
</select>

<select id="countConfirmList"
        parameterType="map"
        resultType="int">
  SELECT COUNT(*)
  FROM TB_CONFIRM_APPLICATION
  WHERE user_id = #{userId}
    AND delt_at = 'N'
</select>

</mapper>